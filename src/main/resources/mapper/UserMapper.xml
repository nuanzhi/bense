<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsege.mapper.sys.UserMapper">


    <resultMap type="User"  id="userMap">
        <id column="u_id" property="uId" />
        <result column="u_account" property="uAccount" />
        <result column="u_password" property="uPassword" />
        <result column="u_name" property="uName" />
        <result column="create_time" property="createTime" />
        <result column="u_status" property="uStatus" />
        <result column="u_creator" property="uCreator" />
        <collection property="roles" ofType="Role" resultMap="roleMap" />
    </resultMap>

    <resultMap type="Role" id="roleMap">
        <id column="r_id" property="rId"/>
        <result column="r_name" property="rName"/>
    </resultMap>

    <select id="getUsers" resultMap="userMap">
        select u.*,r.* from (
          select * from user where 1=1 order by create_time desc limit #{startCount},#{pageSize}
        ) u
        left join u_r_relate urr
        on u.u_id = urr.u_id
        left join role r
        on urr.r_id = r.r_id where 1=1 ORDER BY u.create_time DESC
    </select>

    <select id="getUserTotal" resultType="Long">
        select count(*) from user
    </select>

    <select id="getRoleByUser" parameterType="Long" resultType="Role">
        select r.* from u_r_relate urr
        left join role r
        on urr.r_id = r.r_id where urr.u_id = #{uId}

    </select>

    <insert id="addUser" parameterType="User" keyProperty="uId">
        INSERT INTO user (u_account, u_password, u_name, u_creator)
        VALUES (#{uAccount},#{uPassword},#{uName},#{uCreator})
    </insert>

    <update id="editUser" parameterType="User">
        UPDATE user set
        <if test="uPassword!=null and uPassword!=''">
            u_account = #{uAccount}, u_password = #{uPassword},u_name = #{uName}
        </if>
        <if test="uPassword==null or uPassword==''">
            u_account = #{uAccount}, u_name = #{uName}
        </if>
        where u_id = #{uId}
    </update>

    <insert id="addUserRole" parameterType="List">
        INSERT INTO u_r_relate (u_id, r_id)
        VALUES
        <foreach collection="list" index="index" item="item"
                 separator=",">
            (#{item.uId}, #{item.rId})
        </foreach>
    </insert>

    <select id="associatedRole" parameterType="Long" resultType="Role">
        select r.*,if(tmp.r_id is null,0,1) is_has from role r
        left join (
        select r_id from u_r_relate where u_id = #{uId}
        ) tmp on tmp.r_id = r.r_id where 1=1 ORDER BY r_id
    </select>

    <delete id="associatedRoleDel" parameterType="Long">
        delete from u_r_relate where u_id = #{uId}
    </delete>

    <insert id="associatedRoleSave" parameterType="List">
        INSERT INTO u_r_relate (u_id, r_id) VALUES
        <foreach collection="list" index="index" item="item"
                 separator=",">
            (#{item.uId}, #{item.rId})
        </foreach>
    </insert>

    <delete id="removeUser" parameterType="Long">
        delete from user where u_id = #{uId}
    </delete>

    <delete id="removeURRelate" parameterType="Long">
        delete from u_r_relate where u_id = #{uId}
    </delete>

</mapper>
